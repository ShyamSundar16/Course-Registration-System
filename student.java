/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package courseregistration;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author LENOVO
 */
public class student extends javax.swing.JFrame {

    private Course selectedCourse = null;
    /**
     * Creates new form student
     */
    public student() {
        initComponents();
    }
     public void gencode(String uname)
    {
        jTextField1.getText();
        jTextField1.setText(uname);
         jTextField2.getText();
        jTextField2.setText(uname);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField2 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Course Registration System");

        jInternalFrame1.setVisible(true);

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sem 1", "Sem 2", "Sem 3", "Sem 4", "Sem 5", "Sem 6", "Sem 7", "Sem 8" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Department", "Credits", "Faculty1", "Faculty2", "Faculty3"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Register");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");

        jTextField1.setEditable(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton7.setText("Clear");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("View");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(206, 206, 206)
                                .addComponent(jButton1)
                                .addGap(38, 38, 38)
                                .addComponent(jButton2))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(107, 107, 107)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8)
                                .addGap(4, 4, 4)
                                .addComponent(jButton7)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7)
                            .addComponent(jButton8))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(69, 69, 69))
        );

        jLabel2.setText("View and Register");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jInternalFrame2.setVisible(true);

        jPanel3.setBackground(new java.awt.Color(153, 153, 255));

        jButton3.setText("View");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Department", "Credits"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jTextField2.setEditable(false);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton4.setText("Withdraw");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Cancel");

        jButton6.setText("Clear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(270, 270, 270)
                                        .addComponent(jButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton6)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jButton4)
                        .addGap(34, 34, 34)
                        .addComponent(jButton5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton6))
                .addGap(11, 11, 11)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(80, 80, 80))
        );

        jLabel3.setText("Withdraw course");

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jInternalFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        jButton9.setText("Log out");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jInternalFrame2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(417, 417, 417)
                        .addComponent(jButton9)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton9))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jInternalFrame1)
                    .addComponent(jInternalFrame2))
                .addContainerGap(87, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
        String  user = jTextField2.getText();
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         
           try{
               JOptionPane.showMessageDialog(null, selectedCourse);
        String uname=jTextField1.getText();       
              
        CourseDAO.delelte(selectedCourse, uname);
        
        
               JOptionPane.showMessageDialog(this,"Deleted Succesfully");
       }
       catch(Exception  e){
           JOptionPane.showMessageDialog(this,e);       }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel)
          jTable1.getModel();
         int row = model.getRowCount();
         for(int i=0;i<row;i++){
             model.removeRow(i); 
         }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
         DefaultTableModel model = (DefaultTableModel)
          jTable1.getModel();
         int row = model.getRowCount();
             
        String name=jTextField1.getText();
     int num = jComboBox1.getSelectedIndex();
     
 if(row==0){
         
     
         if(num==0){
             
            
            String Tname="1";
             try
             {
                 
                 Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/courseregistration?useSSL=true", "root", "shyam");
                 Statement myStmt =conn.createStatement();
                 ResultSet myRs = myStmt.executeQuery("select * from coursedetails where semester='1'");
                 while (myRs.next()){
                     Code=myRs.getString("code");
                     Name = myRs.getString("name");
                     Department = myRs.getString("department");
                     Credits = myRs.getString("credits");
                     Faculty1 = myRs.getString("faculty1");
                      Faculty2 = myRs.getString("faculty2");
                    Faculty3 = myRs.getString("faculty3");
                 model.addRow(new Object[] {Code,Name,Department,Credits,Faculty1,Faculty2,Faculty3});
                     
                     
                 }
             }
             
             
             
             
             catch (Exception e)
             {
                 System.err.println("Got an exception!");
                 System.err.println(e.getMessage());
             }
             
         }
         if(num==1){
             
             String Tname="2";
             try
             {
                 
                 Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/courseregistration?useSSL=true", "root", "shyam");
                 Statement myStmt =conn.createStatement();
                 ResultSet myRs = myStmt.executeQuery("select * from coursedetails where semester='2'");
                 while (myRs.next()){
                     Code=myRs.getString("code");
                     Name = myRs.getString("name");
                     Department = myRs.getString("department");
                     Credits = myRs.getString("credits");
                     Faculty1 = myRs.getString("faculty1");
                      Faculty2 = myRs.getString("faculty2");
                    Faculty3 = myRs.getString("faculty3");
                 model.addRow(new Object[] {Code,Name,Department,Credits,Faculty1,Faculty2,Faculty3});
                     
                     
                 }
             }
             
             
             
             
             catch (Exception e)
             {
                 System.err.println("Got an exception!");
                 System.err.println(e.getMessage());
             }
             
         }
          
        
         
        if(num==2){
             
            
            String Tname="3";
             try
             {
                 
                 Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/courseregistration?useSSL=true", "root", "shyam");
                 Statement myStmt =conn.createStatement();
                 ResultSet myRs = myStmt.executeQuery("select * from coursedetails where semester='3'");
                 while (myRs.next()){
                     Code=myRs.getString("code");
                     Name = myRs.getString("name");
                     Department = myRs.getString("department");
                     Credits = myRs.getString("credits");
                     Faculty1 = myRs.getString("faculty1");
                      Faculty2 = myRs.getString("faculty2");
                    Faculty3 = myRs.getString("faculty3");
                 model.addRow(new Object[] {Code,Name,Department,Credits,Faculty1,Faculty2,Faculty3});
                     
                     
                 }
             }
             
             
             
             
             catch (Exception e)
             {
                 System.err.println("Got an exception!");
                 System.err.println(e.getMessage());
             }
             
         }
        if(num==3){
             
            
            String Tname="4";
             try
             {
                 
                 Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/courseregistration?useSSL=true", "root", "shyam");
                 Statement myStmt =conn.createStatement();
                 ResultSet myRs = myStmt.executeQuery("select * from coursedetails where semester='4'");
                 while (myRs.next()){
                     Code=myRs.getString("code");
                     Name = myRs.getString("name");
                     Department = myRs.getString("department");
                     Credits = myRs.getString("credits");
                     Faculty1 = myRs.getString("faculty1");
                      Faculty2 = myRs.getString("faculty2");
                    Faculty3 = myRs.getString("faculty3");
                 model.addRow(new Object[] {Code,Name,Department,Credits,Faculty1,Faculty2,Faculty3});
                     
                     
                 }
             }
             
             
             
             
             catch (Exception e)
             {
                 System.err.println("Got an exception!");
                 System.err.println(e.getMessage());
             }
             
         }
        if(num==4){
             
            
            String Tname="5";
             try
             {
                 
                 Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/courseregistration?useSSL=true", "root", "shyam");
                 Statement myStmt =conn.createStatement();
                 ResultSet myRs = myStmt.executeQuery("select * from coursedetails where semester='5'");
                 while (myRs.next()){
                     Code=myRs.getString("code");
                     Name = myRs.getString("name");
                     Department = myRs.getString("department");
                     Credits = myRs.getString("credits");
                     Faculty1 = myRs.getString("faculty1");
                      Faculty2 = myRs.getString("faculty2");
                    Faculty3 = myRs.getString("faculty3");
                 model.addRow(new Object[] {Code,Name,Department,Credits,Faculty1,Faculty2,Faculty3});
                     
                     
                 }
             }
             
             
             
             
             catch (Exception e)
             {
                 System.err.println("Got an exception!");
                 System.err.println(e.getMessage());
             }
             
         }
        if(num==5){
             
            
            String Tname="6";
             try
             {
                 
                 Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/courseregistration?useSSL=true", "root", "shyam");
                 Statement myStmt =conn.createStatement();
                 ResultSet myRs = myStmt.executeQuery("select * from coursedetails where semester='6'");
                 while (myRs.next()){
                     Code=myRs.getString("code");
                     Name = myRs.getString("name");
                     Department = myRs.getString("department");
                     Credits = myRs.getString("credits");
                     Faculty1 = myRs.getString("faculty1");
                      Faculty2 = myRs.getString("faculty2");
                    Faculty3 = myRs.getString("faculty3");
                 model.addRow(new Object[] {Code,Name,Department,Credits,Faculty1,Faculty2,Faculty3});
                     
                     
                 }
             }
             
             
             
             
             catch (Exception e)
             {
                 System.err.println("Got an exception!");
                 System.err.println(e.getMessage());
             }
             
         }
        if(num==6){
             
            
            String Tname="7";
             try
             {
                 
                 Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/courseregistration?useSSL=true", "root", "shyam");
                 Statement myStmt =conn.createStatement();
                 ResultSet myRs = myStmt.executeQuery("select * from coursedetails where semester='7'");
                 while (myRs.next()){
                     Code=myRs.getString("code");
                     Name = myRs.getString("name");
                     Department = myRs.getString("department");
                     Credits = myRs.getString("credits");
                     Faculty1 = myRs.getString("faculty1");
                     Faculty2 = myRs.getString("faculty2");
                     Faculty3 = myRs.getString("faculty3");
                 model.addRow(new Object[] {Code,Name,Department,Credits,Faculty1,Faculty2,Faculty3});
                     
                     
                 }
             }
             
             
             
             
             catch (Exception e)
             {
                 System.err.println("Got an exception!");
                 System.err.println(e.getMessage());
             }
             
         }
        if(num==7){
             
            
            String Tname="8";
             try
             {
                 
                 Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/courseregistration?useSSL=true", "root", "shyam");
                 Statement myStmt =conn.createStatement();
                 ResultSet myRs = myStmt.executeQuery("select * from coursedetails where semester='8'");
                 while (myRs.next()){
                     Code=myRs.getString("code");
                     Name = myRs.getString("name");
                     Department = myRs.getString("department");
                     Credits = myRs.getString("credits");
                     Faculty1 = myRs.getString("faculty1");
                      Faculty2 = myRs.getString("faculty2");
                    Faculty3 = myRs.getString("faculty3");
                 model.addRow(new Object[] {Code,Name,Department,Credits,Faculty1,Faculty2,Faculty3});
                     
                     
                 }
             }
             
             
             
             
             catch (Exception e)
             {
                 System.err.println("Got an exception!");
                 System.err.println(e.getMessage());
             }
             
         }
     }
     else {
         JOptionPane.showMessageDialog(this,"Clear table to view more");
     }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
       
      String  user = jTextField1.getText();
       
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
         
           try{
               JOptionPane.showMessageDialog(null, selectedCourse);
        String uname=jTextField1.getText();       
              
        CourseDAO.save(selectedCourse , uname);
        
        
               JOptionPane.showMessageDialog(this,"saved");
       }
       catch(Exception  e){
           JOptionPane.showMessageDialog(this,e);       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        //
         DefaultTableModel model = (DefaultTableModel)
          jTable2.getModel();
         int row = model.getRowCount();
         
         
             
        String name=jTextField2.getText();
        if(row==0){
         try
             {
                 
                 Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/courseregistration?useSSL=true", "root", "shyam");
                 Statement myStmt =conn.createStatement();
                 ResultSet myRs = myStmt.executeQuery("select * from enrolldetails where studentid='"+name+"'");
                 while (myRs.next()){
                     Code=myRs.getString("courseid");
                     Name = myRs.getString("coursename");
                     Department = myRs.getString("department");
                     Credits = myRs.getString("credits");
                     
                 model.addRow(new Object[] {Code,Name,Department,Credits});
                     
                     
                 }
             }
             
             
             
             
             catch (Exception e)
             {
                 System.err.println("Got an exception!");
                 System.err.println(e.getMessage());
             }
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Clear table to delete further");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        try{  
      
        int row = jTable2.getSelectedRow();
        TableModel selectedRow = jTable2.getModel();
      //  JOptionPane.showMessageDialog(null, row);
      String courseName = selectedRow.getValueAt(row, 1).toString();   
      String code = selectedRow.getValueAt(row, 2).toString();
      String department = selectedRow.getValueAt(row, 3).toString();
      String credits = selectedRow.getValueAt(row, 0).toString();
  
        // JOptionPane.showMessageDialog(null, data);

         selectedCourse = new Course(courseName,code,department,credits);
        }
        catch(Exception e){
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         try{  
      
        int row = jTable1.getSelectedRow();
        TableModel selectedRow = jTable1.getModel();
      //  JOptionPane.showMessageDialog(null, row);
      String courseName = selectedRow.getValueAt(row, 1).toString();   
      String code = selectedRow.getValueAt(row, 2).toString();
      String department = selectedRow.getValueAt(row, 3).toString();
      String credits = selectedRow.getValueAt(row, 0).toString();
  
        // JOptionPane.showMessageDialog(null, data);

         selectedCourse = new Course(courseName,code,department,credits);
        }
        catch(Exception e){
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel)
          jTable2.getModel();
         int row = model.getRowCount();
         for(int i=0;i<row;i++){
             model.removeRow(i); 
         }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        Login l = new Login();
        l.setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new student().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
String Code;
String Name;
String Department;
String Credits;
String Faculty1;
String Faculty2;
String Faculty3;
String data;
}
